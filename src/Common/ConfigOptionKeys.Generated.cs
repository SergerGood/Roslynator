// Copyright (c) Josef Pihrt and Contributors. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

namespace Roslynator
{
    internal static partial class ConfigOptionKeys
    {
        public const string ArrowTokenNewLine = "roslynator.arrow_token_new_line";
        public const string BinaryOperatorNewLine = "roslynator.binary_operator_new_line";
        public const string ConditionalExpressionNewLine = "roslynator.conditional_expression_new_line";
        public const string EmptyStringStyle = "roslynator.empty_string_style";
        public const string EnumFlagOperation = "roslynator.enum_flag_operation";
        public const string EqualsSignNewLine = "roslynator.equals_sign_new_line";
        public const string IncludeConfigureAwaitCall = "roslynator.include_configure_await_call";
        public const string MaxLineLength = "roslynator.max_line_length";
        public const string NullCheckStyle = "roslynator.null_check_style";
        public const string ParenthesizeConditionOfConditionalExpression = "roslynator.parenthesize_condition_of_conditional_expression";
        public const string ParenthesizeConditionOfConditionalExpressionWhenItContainsSingleToken = "roslynator.parenthesize_condition_of_conditional_expression_when_it_contains_single_token";
        public const string PreferBlockBodyToExpressionBody = "roslynator.prefer_block_body_to_expression_body";
        public const string PreferBlockBodyWhenDeclarationSpansOverMultipleLines = "roslynator.prefer_block_body_when_declaration_spans_over_multiple_lines";
        public const string PreferBlockBodyWhenExpressionSpansOverMultipleLines = "roslynator.prefer_block_body_when_expression_spans_over_multiple_lines";
        public const string PreferEmptyLineBetweenClosingBraceAndSwitchSection = "roslynator.prefer_empty_line_between_closing_brace_and_switch_section";
        public const string PreferEmptyLineBetweenSingleLineAccessors = "roslynator.prefer_empty_line_between_single_line_accessors";
        public const string PreferEmptyLineBetweenUsingDirectivesWithDifferentRootNamespace = "roslynator.prefer_empty_line_between_using_directives_with_different_root_namespace";
        public const string PreferExplicitAccessibilityModifiers = "roslynator.prefer_explicit_accessibility_modifiers";
        public const string PreferExplicitlyTypedArray = "roslynator.prefer_explicitly_typed_array";
        public const string PreferExpressionBodyToBlockBody = "roslynator.prefer_expression_body_to_block_body";
        public const string PreferImplicitAccessibilityModifiers = "roslynator.prefer_implicit_accessibility_modifiers";
        public const string PreferImplicitlyTypedArray = "roslynator.prefer_implicitly_typed_array";
        public const string PreferImplicitlyTypedArrayWhenTypeIsObvious = "roslynator.prefer_implicitly_typed_array_when_type_is_obvious";
        public const string PreferNewLineAtEndOfFile = "roslynator.prefer_new_line_at_end_of_file";
        public const string PreferNewLineBeforeWhileInDoStatement = "roslynator.prefer_new_line_before_while_in_do_statement";
        public const string PreferParenthesesWhenCreatingNewObject = "roslynator.prefer_parentheses_when_creating_new_object";
        public const string PrefixFieldIdentifierWithUnderscore = "roslynator.prefix_field_identifier_with_underscore";
        public const string SuppressUnityScriptMethods = "roslynator.suppress_unity_script_methods";
        public const string UseAnonymousFunctionOrMethodGroup = "roslynator.use_anonymous_function_or_method_group";
    }
}