<?xml version="1.0" encoding="utf-8"?>
<Options>
  <Option Id="MaxLineLength">
    <DefaultValue>140</DefaultValue>
    <ValuePlaceholder>&lt;MAX_LINE_LENGTH&gt;</ValuePlaceholder>
    <Description>Max line length</Description>
  </Option>
  <Option Id="PrefixFieldIdentifierWithUnderscore">
    <DefaultValue>false</DefaultValue>
    <ValuePlaceholder>true|false</ValuePlaceholder>
    <Description>Prefix field identifier with underscore</Description>
  </Option>
  <Option Id="PreferNewLineAtEndOfFile">
    <ValuePlaceholder>true|false</ValuePlaceholder>
    <Description>Prefer new line at the end of a file</Description>
  </Option>
  <Option Id="PreferParenthesesWhenCreatingNewObject">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer parentheses when creating new object</Description>
  </Option>
  <Option Id="PreferExplicitlyTypedArray">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer explicitly typed array</Description>
  </Option>
  <Option Id="PreferImplicitlyTypedArray">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer implicitly typed array</Description>
  </Option>
  <Option Id="PreferImplicitlyTypedArrayWhenTypeIsObvious">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer implicitly typed array when type is obvious</Description>
  </Option>
  <Option Id="PreferExpressionBodyToBlockBody">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer expression body to block body</Description>
  </Option>
  <Option Id="PreferBlockBodyToExpressionBody">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer block body to expression body</Description>
  </Option>
  <Option Id="PreferBlockBodyWhenDeclarationSpansOverMultipleLines">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer block body when declaration spans over multiple lines</Description>
  </Option>
  <Option Id="PreferBlockBodyWhenExpressionSpansOverMultipleLines">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer block body when expression spans over multiple lines</Description>
  </Option>
  <Option Id="PreferExplicitAccessibilityModifiers">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer explicit accessibility modifiers</Description>
  </Option>
  <Option Id="PreferImplicitAccessibilityModifiers">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer implicit accessibility modifiers</Description>
  </Option>
  <Option Id="PreferNewLineBeforeWhileInDoStatement">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer new line before 'while' in 'do' statement</Description>
  </Option>
  <Option Id="PreferEmptyLineBetweenSingleLineAccessors">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer empty line between single-line accessors</Description>
  </Option>
  <Option Id="PreferEmptyLineBetweenUsingDirectiveWithDifferentRootNamespace">
	<ValuePlaceholder>true|false</ValuePlaceholder>
	<Description>Prefer empty line between using directives with different root namespace</Description>
  </Option>
  <Option Id="BinaryOperatorNewLine">
	<ValuePlaceholder>after|before</ValuePlaceholder>
	<Description>Place new line after/before binary operator</Description>
  </Option>
  <Option Id="ConditionalExpressionNewLine">
	<ValuePlaceholder>after|before</ValuePlaceholder>
	<Description>Place new line after/before conditional expression operator</Description>
  </Option>
  <Option Id="ArrowTokenNewLine">
	<ValuePlaceholder>after|before</ValuePlaceholder>
	<Description>Place new line after/before arrow token</Description>
  </Option>
  <Option Id="EqualsSignTokenNewLine">
	<ValuePlaceholder>after|before</ValuePlaceholder>
	<Description>Place new line after/before equals sign</Description>
  </Option>
  <!--
  <Option Id="">
    <Key></Key>
    <DefaultValue></DefaultValue>
    <ValuePlaceholder></ValuePlaceholder>
    <Description></Description>
  </Option>
  -->
</Options>